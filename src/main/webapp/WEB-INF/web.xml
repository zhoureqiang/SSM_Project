<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>helloworld</display-name>
  <!-- 配置编码方式-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- 配置springmvc的前端控制器 指向spring-mvc.xml 程序在启动的时候就加载springmvc 可以接受所有请求 load-on-startup：表示启动容器时初始化该Servlet； -->
  <servlet>
    <servlet-name>springServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置springMVC需要加载的配置文件
        spring-dao.xml,spring-service.xml,spring-mvc.xml,spring-quartz.xml
        Mybatis - > spring -> springmvc -> quartz
     -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value> classpath:spring/spring-*.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- 将前端URL请求和后台处理方法controller建立对应关系-->
  <servlet-mapping>
    <servlet-name>springServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- Spring配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 防止Spring内存溢出监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- 取消对某一类文件的拦截-->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.md</url-pattern>
  </servlet-mapping>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/spring-*.xml</param-value>
  </context-param>

  <!--druid web方式监控配置-->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>druidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>/public/*,*.js,*.css,/druid*,*.jsp,*.swf</param-value>
    </init-param>
    <init-param>
      <param-name>principalSessionName</param-name>
      <param-value>sessionInfo</param-value>
    </init-param>
    <init-param>
      <param-name>profileEnable</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>druidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--<servlet>-->
    <!--<servlet-name>druidStatView</servlet-name>-->
    <!--<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>-->
    <!--<init-param>-->
      <!--&lt;!&ndash; 允许清空统计数据 &ndash;&gt;-->
      <!--<param-name>resetEnable</param-name>-->
      <!--<param-value>true</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
      <!--<param-name>loginUsername</param-name>-->
      <!--<param-value>&lt;!&ndash;登陆时用户名&ndash;&gt;admin</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
      <!--<param-name>loginPassword</param-name>-->
      <!--<param-value>&lt;!&ndash;登陆时密码&ndash;&gt;admin</param-value>-->
    <!--</init-param>-->
  <!--</servlet>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>druidStatView</servlet-name>-->
    <!--<url-pattern>druid/*</url-pattern>-->
  <!--</servlet-mapping>-->

  <!-- shiro的filter -->
  <!-- shiro过虑器，DelegatingFilterProxy通过代理模式将spring容器中的bean和filter关联起来 -->
  <!--<filter>-->
    <!--<filter-name>shiroFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--&lt;!&ndash; 设置true由servlet容器控制filter的生命周期 &ndash;&gt;-->
    <!--<init-param>-->
      <!--<param-name>targetFilterLifecycle</param-name>-->
      <!--<param-value>true</param-value>-->
    <!--</init-param>-->
    <!--&lt;!&ndash; 设置spring容器filter的bean id，如果不设置则找与filter-name一致的bean&ndash;&gt;-->
    <!--<init-param>-->
      <!--<param-name>targetBeanName</param-name>-->
      <!--<param-value>shiroFilter</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>shiroFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!-- 欢迎页面-->
  <welcome-file-list>
    <welcome-file>/WEB-INF/views/index.jsp</welcome-file>
  </welcome-file-list>
  <!--404错误展示页面，可自行配置-->
  <error-page>
  <error-code>404</error-code>
  <location>/WEB-INF/views/404.jsp</location>
  </error-page>
  <!--设置session失效时间为30分钟 -->
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
</web-app>
